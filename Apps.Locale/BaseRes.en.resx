<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssignRole" xml:space="preserve">
    <value>Assign Role</value>
    <comment>011</comment>
  </data>
  <data name="AssignUser" xml:space="preserve">
    <value>Assign User</value>
    <comment>012</comment>
  </data>
  <data name="Check" xml:space="preserve">
    <value>Check</value>
    <comment>014</comment>
  </data>
  <data name="CheckFail" xml:space="preserve">
    <value>Check Fail</value>
    <comment>Suggestion</comment>
  </data>
  <data name="CheckSucceed" xml:space="preserve">
    <value>Check Succeed</value>
    <comment>Suggestion</comment>
  </data>
  <data name="ChinaCharExpression" xml:space="preserve">
    <value>{0} must be  chinese characters</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="ComparePassword" xml:space="preserve">
    <value>Confirm password does not match</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="ContainExpression" xml:space="preserve">
    <value>{0} must contain {1}</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
    <comment>001</comment>
  </data>
  <data name="DateExpression" xml:space="preserve">
    <value>{0} be the correct date format：2012-10-10</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
    <comment>002</comment>
  </data>
  <data name="DeleteFail" xml:space="preserve">
    <value>Delete Fail</value>
    <comment>Suggestion</comment>
  </data>
  <data name="DeleteSucceed" xml:space="preserve">
    <value>Delete Succeed</value>
    <comment>Suggestion</comment>
  </data>
  <data name="Desktop" xml:space="preserve">
    <value>Desktop</value>
    <comment>003</comment>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
    <comment>004</comment>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>Disable</value>
    <comment>Suggestion</comment>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
    <comment>005</comment>
  </data>
  <data name="EditFail" xml:space="preserve">
    <value>Edit Fail</value>
    <comment>Suggestion</comment>
  </data>
  <data name="EditSucceed" xml:space="preserve">
    <value>Edit Succeed</value>
    <comment>Suggestion</comment>
  </data>
  <data name="EmailExpression" xml:space="preserve">
    <value>{0} must be correct Email address</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
    <comment>006</comment>
  </data>
  <data name="InsertFail" xml:space="preserve">
    <value>Insert Fail</value>
    <comment>Suggestion</comment>
  </data>
  <data name="InsertSucceed" xml:space="preserve">
    <value>Insert Succeed</value>
    <comment>Suggestion</comment>
  </data>
  <data name="IntRangeExpression" xml:space="preserve">
    <value>{0} must be in {1} and {2} between</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="IsCharExpression" xml:space="preserve">
    <value>{0} only Number,letters,underline,the hyphen：abc_a-b</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="IsDecimalExpression" xml:space="preserve">
    <value>{0} must be a decimal</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="IsIntegerExpression" xml:space="preserve">
    <value>{0} must be a Integer</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="IsNegativeDecimalExpression" xml:space="preserve">
    <value>{0} must be a negative  decimal</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="IsNegativeIntegerExpression" xml:space="preserve">
    <value>{0} must be a negative  integer</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="IsNumberExpression" xml:space="preserve">
    <value>{0} must be a number</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="IsPositiveDecimalExpression" xml:space="preserve">
    <value>{0} must be a positive decimal</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="IsPositiveIntegerExpression" xml:space="preserve">
    <value>{0} must be a positive  integer</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="MaxWordsExpression" xml:space="preserve">
    <value>{0} the most contains {1} chinese characters and {2} characters</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="MinWordsExpression" xml:space="preserve">
    <value>{0} at least {1} characters</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="NotContainExpression" xml:space="preserve">
    <value>The {0} must not contain {1}</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="NotEqualExpression" xml:space="preserve">
    <value>{0} can not be {1}</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="NotNullExpression" xml:space="preserve">
    <value>{0} must fill out,and can not contain Spaces</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="PhoneExpression" xml:space="preserve">
    <value>{0} must be correct phone number：0769-2222222</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="PlaseChooseToOperatingRecords" xml:space="preserve">
    <value>Plase Choose To Operating Records</value>
    <comment>Suggestion</comment>
  </data>
  <data name="PrimaryRepeat" xml:space="preserve">
    <value>Primary Repeat</value>
    <comment>Suggestion</comment>
  </data>
  <data name="Query" xml:space="preserve">
    <value>Query</value>
    <comment>007</comment>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Reply" xml:space="preserve">
    <value>Reply</value>
    <comment>009</comment>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Reset Password</value>
    <comment>010</comment>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
    <comment>008</comment>
  </data>
  <data name="SetFail" xml:space="preserve">
    <value>Set Fail</value>
    <comment>Suggestion</comment>
  </data>
  <data name="SetSucceed" xml:space="preserve">
    <value>Set Succeed</value>
    <comment>Suggestion</comment>
  </data>
  <data name="SiteExpression" xml:space="preserve">
    <value>{0} must be correct site address：http://www.google.com</value>
    <comment>数据注解验证</comment>
  </data>
  <data name="Tip" xml:space="preserve">
    <value>Tip</value>
    <comment>013</comment>
  </data>
  <data name="TitleCreatePerson" xml:space="preserve">
    <value>Creator</value>
    <comment>055</comment>
  </data>
  <data name="TitleCreateTime" xml:space="preserve">
    <value>Create Time</value>
    <comment>052</comment>
  </data>
  <data name="TitleEnable" xml:space="preserve">
    <value>Enable</value>
    <comment>051</comment>
  </data>
  <data name="TitleID" xml:space="preserve">
    <value>ID</value>
    <comment>057</comment>
  </data>
  <data name="TitleName" xml:space="preserve">
    <value>Name</value>
    <comment>050</comment>
  </data>
  <data name="TitleRemark" xml:space="preserve">
    <value>Remark</value>
    <comment>056</comment>
  </data>
  <data name="TitleSort" xml:space="preserve">
    <value>Sort</value>
    <comment>053</comment>
  </data>
  <data name="TitleState" xml:space="preserve">
    <value>State</value>
    <comment>054</comment>
  </data>
  <data name="UnCheck" xml:space="preserve">
    <value>UnCheck</value>
    <comment>015</comment>
  </data>
  <data name="UnCheckFail" xml:space="preserve">
    <value>UnCheck Fail</value>
    <comment>Suggestion</comment>
  </data>
  <data name="UnCheckSucceed" xml:space="preserve">
    <value>UnCheck Succeed</value>
    <comment>Suggestion</comment>
  </data>
  <data name="UnSelect" xml:space="preserve">
    <value>UnSelect</value>
    <comment>Suggestion</comment>
  </data>
  <data name="UpdateFail" xml:space="preserve">
    <value>Update Fail</value>
    <comment>Suggestion</comment>
  </data>
  <data name="UpdateSucceed" xml:space="preserve">
    <value>Update Succeed</value>
    <comment>Suggestion</comment>
  </data>
  <data name="YouWantToDeleteTheSelectedRecords" xml:space="preserve">
    <value>You want to delete The selected records</value>
    <comment>Suggestion</comment>
  </data>
</root>